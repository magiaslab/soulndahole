---
import { Image } from 'astro:assets';
import logo from '../assets/images/logo.svg';

const navLinks = [
    { name: "Home", href: "/" },
    { name: "Programma", href: "/programma" },
    { name: "Squadre", href: "/teams" },
    { name: "Albo d'oro", href: "/albo-doro" },
    { name: "Sponsor", href: "/sponsor" },
    { name: "Trovaci", href: "/trovaci" }
];

const currentPath = Astro.url.pathname;
---
<header id="main-header" class="fixed top-0 left-0 w-full z-50 transition-all duration-300">
    <div class="container mx-auto px-4 flex items-center justify-between h-16 md:h-20">
        <a href="/" class="block z-50">
            <Image 
                src={logo}
                alt="Soul In Da Hole Logo" 
                class="h-8 md:h-10 w-auto logo-image transition-all duration-300"
                width="150"
                height="40"
            />
        </a>

        <!-- Desktop Navigation -->
        <nav class="hidden md:flex items-center space-x-2">
            {navLinks.map(link => {
                const isActive = currentPath === link.href || (link.href !== '/' && currentPath.startsWith(link.href));
                return (
                    <a 
                        href={link.href} 
                        class="nav-link px-4 py-2 text-sm font-medium text-white transition-colors duration-300 uppercase tracking-wider"
                        class:list={{
                            'active text-soul-red-500': isActive,
                            'hover:text-soul-red-500': !isActive
                        }}
                    >
                        {link.name}
                    </a>
                )
            })}
        </nav>

        <!-- Mobile Menu Button -->
        <button id="mobile-menu-button" class="md:hidden text-white z-50 relative h-8 w-8">
            <span class="sr-only">Apri menu</span>
            <!-- Icona Hamburger -->
            <svg id="icon-open" class="h-full w-full absolute transition-opacity" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                <path stroke-linecap="round" stroke-linejoin="round" d="M4 6h16M4 12h16m-4 6h4" />
            </svg>
            <!-- Icona Chiusura -->
            <svg id="icon-close" class="h-full w-full absolute transition-opacity opacity-0" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
            </svg>
        </button>
    </div>
</header>

<!-- Mobile Navigation Panel -->
<div id="mobile-menu" class="fixed top-0 left-0 w-full h-full bg-black/90 backdrop-blur-md z-40 transition-transform duration-300 ease-in-out transform translate-x-full">
    <div class="flex flex-col items-center justify-center h-full space-y-6">
        {navLinks.map(link => (
            <a href={link.href} class="text-2xl font-bold text-white hover:text-soul-red-500 transition-colors duration-300 uppercase tracking-wider">{link.name}</a>
        ))}
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', () => {
    const header = document.getElementById('main-header');
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    const iconOpen = document.getElementById('icon-open');
    const iconClose = document.getElementById('icon-close');

    // Scroll behavior for header
    const handleScroll = () => {
        if (window.scrollY > 50) {
            header?.classList.add('scrolled');
        } else {
            header?.classList.remove('scrolled');
        }
    };

    window.addEventListener('scroll', handleScroll);
    handleScroll(); // Check on page load

    // Mobile menu toggle
    mobileMenuButton?.addEventListener('click', () => {
        const isOpen = mobileMenu?.classList.toggle('translate-x-full');
        document.body.classList.toggle('overflow-hidden', !isOpen);
        iconOpen?.classList.toggle('opacity-0', !isOpen);
        iconClose?.classList.toggle('opacity-0', isOpen);
    });

    // Close mobile menu when a link is clicked
    mobileMenu?.querySelectorAll('a').forEach(link => {
        link.addEventListener('click', () => {
            mobileMenu.classList.add('translate-x-full');
            document.body.classList.remove('overflow-hidden');
            iconOpen?.classList.remove('opacity-0');
            iconClose?.classList.add('opacity-0');
        });
    });
});
</script>

<style>
#main-header.scrolled {
    @apply bg-black/80 backdrop-blur-sm shadow-lg;
    @apply h-16;
}
#main-header.scrolled .logo-image {
    @apply h-8;
}

.nav-link {
    position: relative;
    padding-bottom: 8px; /* Spazio per la sottolineatura */
}

.nav-link::after {
    content: '';
    position: absolute;
    width: 0;
    height: 2px;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    background-color: #ef4444; /* soul-red-500 */
    transition: width 0.3s ease-in-out;
}

.nav-link:hover::after,
.nav-link.active::after {
    width: calc(100% - 2rem); /* Larghezza della sottolineatura (padding orizzontale di 1rem per lato) */
}

.nav-link.active {
    /* Il colore è già applicato dalla classe active text-soul-red-500 */
    font-weight: 600; /* Opzionale: rende il testo un po' più grassetto */
}
</style> 