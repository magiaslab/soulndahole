---
import Layout from '../layouts/Layout.astro';
import { ViewTransitions } from 'astro:transitions';
import type { ImageMetadata } from 'astro';
import { getImage } from "astro:assets";
import { createSlug } from '../utils/slug';

// 1. Trova tutte le immagini e da esse deriva le edizioni
const allImages = import.meta.glob<{ default: ImageMetadata }>('/src/assets/images/albo/*/*.{jpg,JPG,jpeg,png,webp}');
const editionDirNames = [...new Set(Object.keys(allImages).map(path => path.split('/').slice(-2, -1)[0]))];

// 2. Costruisce l'array delle edizioni in modo asincrono
const editions = await Promise.all(
    editionDirNames.map(async (dirName) => {
        const yearMatch = dirName.match(/(\d{4})/);
        const year = yearMatch ? yearMatch[1] : 'N/A';
        
        const name = dirName
            .replace(/_/g, ' ')
            .replace(/(\d+\s*edizione\s*\d*)/i, (match) => `${match.trim()} -`) // Aggiunge trattino e case-insensitive
            .split(' ')
            .map(word => word.charAt(0).toUpperCase() + word.slice(1))
            .join(' ');

        const slug = createSlug(dirName);

        // 3. Trova la prima immagine nella cartella per l'anteprima
        const previewImagePath = Object.keys(allImages).find(imgPath => imgPath.includes(`/${dirName}/`));
        let previewImage = null;
        if (previewImagePath) {
            const imageModule = await allImages[previewImagePath]();
            previewImage = await getImage({ src: imageModule.default, width: 600, height: 400, format: 'webp', quality: 80 });
        }

        return { name, year, slug, previewImage };
    })
).then(editions => editions.sort((a, b) => b.year.localeCompare(a.year))); // Ordina per anno, dal pi√π recente
---

<Layout title="Albo d'oro - Soul 'n Da Hole" description="Rivivi le edizioni passate del torneo Soul 'n Da Hole attraverso le gallerie fotografiche.">
    <ViewTransitions />
    <main class="py-20 bg-soul-gray-950 text-white">
        <section class="container mx-auto px-4">
            <h1 class="text-5xl font-black text-white font-display uppercase tracking-wider text-center mb-12" style="text-shadow: 0 0 15px rgba(220, 38, 38, 0.5);">
                Albo d'oro
            </h1>
            <p class="text-center text-lg text-soul-gray-300 mb-12 max-w-2xl mx-auto">
                Rivivi le emozioni delle passate edizioni. Ogni anno, una nuova leggenda.
            </p>
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
                {editions.map(edition => (
                    <a 
                        href={`/albo-doro/${edition.slug}`} 
                        class="group relative block rounded-lg shadow-lg hover:shadow-xl overflow-hidden aspect-[4/3] bg-soul-gray-900"
                        style={edition.previewImage ? `background-image: url(${edition.previewImage.src}); background-size: cover; background-position: center;` : ''}
                    >
                        <div class="absolute inset-0 bg-black/60 group-hover:bg-black/40 transition-colors duration-300"></div>
                        <div class="relative h-full flex flex-col justify-end p-6">
                            <h2 class="text-2xl font-display uppercase tracking-wider text-white mb-2 group-hover:text-soul-red-500 transition-colors duration-300" transition:name={`edition-title-${edition.slug}`}>
                                {edition.name}
                            </h2>
                            <p class="text-soul-gray-300 font-medium">{`Edizione ${edition.year}`}</p>
                        </div>
                    </a>
                ))}
            </div>
        </section>
    </main>
</Layout> 